name: Multi-Cloud CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (deploy/destroy)'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - destroy

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest

    outputs:
      cloud: ${{ steps.read_config.outputs.cloud }}
      action: ${{ github.event.inputs.action }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Read cloud-config.yaml
        id: read_config
        run: |
          CLOUD=$(grep '^cloud:' config/cloud-config.yaml | awk '{print $2}')
          echo "Selected Cloud: $CLOUD"
          echo "cloud=$CLOUD" >> "$GITHUB_OUTPUT"

  deploy:
    name: Terraform + Helm Deploy
    needs: setup
    if: ${{ needs.setup.outputs.action != 'destroy' }}
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3

      - name: Init Terraform
        run: |
          cd infra/terraform/${{ needs.setup.outputs.cloud }}
          terraform init

      - name: Apply Terraform
        run: |
          cd infra/terraform/${{ needs.setup.outputs.cloud }}
          terraform apply -auto-approve

      - name: Configure Kubeconfig
        run: |
          echo "üí° You should implement kubeconfig generation here based on your cloud."
          echo "Example for AWS EKS: aws eks update-kubeconfig --region us-east-1 --name <cluster-name>"
          # TODO: Add cloud-specific setup

      - name: Deploy Application via Helm
        run: |
          helm upgrade --install multi-cloud-app ./deployment/helm \
            --values config/cloud-config.yaml \
            --namespace default --create-namespace

      - name: Deploy Observability Stack (Prometheus & Grafana)
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm upgrade --install kube-prometheus-stack prometheus-community/kube-prometheus-stack \
            -f observability/prometheus-grafana/kube-prometheus-stack-values.yaml \
            --namespace monitoring --create-namespace

      - name: Notify Success
        run: echo "‚úÖ Deployed successfully to ${{ needs.setup.outputs.cloud }}"

  destroy:
    name: Destroy Infrastructure
    needs: setup
    if: ${{ needs.setup.outputs.action == 'destroy' }}
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Init & Destroy
        run: |
          cd infra/terraform/${{ needs.setup.outputs.cloud }}
          terraform init
          terraform destroy -auto-approve

      - name: Notify Destroyed
        run: echo "üóëÔ∏è Infrastructure destroyed on ${{ needs.setup.outputs.cloud }}"
